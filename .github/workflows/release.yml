name: Release
on:
  push:
    branches:
      - main
    paths:
      - version.txt

permissions: write-all

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  release:
    name: Run Release Manager

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          persist-credentials: true
          # Pull all previous tags
          fetch-depth: 0
          fetch-tags: true

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.14.4

      - name: Pull Helm Chart
        run: |
          helm repo add sxt-charts-central https://spaceandtime.jfrog.io/artifactory/api/helm/sxt-charts-central --username ${{secrets.ARTIFACTORY_USER}} --password ${{secrets.ARTIFACTORY_API_KEY}}
          version=$(cat version.txt)
          mkdir -p .cr-release-packages/$version
          helm pull sxt-charts-central/sxt-node-chart --version $version --destination .cr-release-packages/$version
          mkdir -p charts
          tar xf .cr-release-packages/$version/sxt-node-chart-$version.tgz -C charts
          touch charts/sxt-node-chart/templates/NOTES.txt
          echo "version=$version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.version }}
          bodyFile: charts/sxt-node-chart/templates/NOTES.txt
          token: ${{ secrets.GH_TOKEN }}
          makeLatest: true
          artifacts: ".cr-release-packages/${{ env.version }}/*.tgz"
          artifactErrorsFailBuild: true

      - name: Continue chart-release
        run: |
          set -x
          if git rev-parse --verify --quiet origin/gh-pages:index.yaml; then
            git cat-file -p origin/gh-pages:index.yaml > .cr-release-packages/index.yaml
          fi

          if [ -e .cr-release-packages/index.yaml ]; then
            helm repo index .cr-release-packages --url "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/download" --merge .cr-release-packages/index.yaml
          else
            helm repo index .cr-release-packages --url "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/download"
          fi

          git switch -t origin/gh-pages || git switch --orphan gh-pages
          mv .cr-release-packages/index.yaml index.yaml
          git add index.yaml
          git commit -m "update index.yaml"
          git push origin HEAD
